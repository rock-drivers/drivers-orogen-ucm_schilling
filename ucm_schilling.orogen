name "ucm_schilling"
# Optionally declare the version number
# version "0.1"

using_library "ucm_schilling"
import_types_from "ucm_schilling/UcmTypes.hpp"
import_types_from "ucm_schilling/Config.hpp"
import_types_from "base_schilling/Error.hpp"

using_task_library "iodrivers_base"

# Declare a new task context (i.e., a component)
#
# The corresponding C++ class can be edited in tasks/Task.hpp and
# tasks/Task.cpp, and will be put in the ucm_schilling namespace.
task_context "Task" do
    subclasses "iodrivers_base::Task"
    needs_configuration
    runtime_states :MONITORING
    error_states :COMM_ERROR, :DEV_ERROR
    
    property "config", "ucm_schilling/Config"
    
    output_port "ucm_samples", "ucm_schilling/UcmData"
    output_port "ucm_status", "ucm_schilling/UcmStatus"
    output_port('log_message', 'oro_marum/LogMessage').
        doc 'TextMessage with different priority levels'
    periodic(0.2)
end

# Declare a new task context (i.e., a component)
#
# The corresponding C++ class can be edited in tasks/Task.hpp and
# tasks/Task.cpp, and will be put in the ucm_schilling namespace.
task_context "DisplayTask" do
    subclasses "iodrivers_base::Task"
    needs_configuration
    runtime_states :MONITORING
    error_states :COMM_ERROR, :DEV_ERROR
    
    property "config", "ucm_schilling/Config"
    property "bufferTimeMin", "int"
    property "bufferFrequency", "int"
    
    operation('set_calib_values').
      doc('set new calibration Values').
      argument('arg', 'ucm_schilling/Config')
    operation('init_gui_request').
      doc('init request from the gui')
    
    output_port "ucm_samples", "ucm_schilling/UcmData"
    output_port "ucm_status", "ucm_schilling/UcmStatus"
    output_port "ucm_init", "ucm_schilling/UcmInitData"
    output_port('log_message', 'oro_marum/LogMessage').
        doc 'TextMessage with different priority levels'
    periodic(0.2)
end

# Declares a deployment, i.e. an actual executable that contains various tasks.
deployment "ucm_schilling_test" do
    # This is a test deployment that should not be installed
    do_not_install

    # Declares it as periodic, with a period of 100ms
    task("ucm_schilling", "ucm_schilling::Task")
    add_default_logger
end

